Create a file called main.tf.
Create a docker image resource and call it nginx_image.
Set the name of the image to nginx:latest.
Save and exit the file.

Initialize Terraform.
Plan the deploy and output a terraform plan called tf_image_plan.
Apply the plan using tf_image_plan.

**************************
Step1---> 

 docker info
Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.39/info: dial unix /var/run/docker.sock: connect: permission denied
ubuntu@ip-172-31-1-34:~$ sudo chmod 777 /var/run/docker.sock
ubuntu@ip-172-31-1-34:~$ docker info

Step2---> installing terraform

sudo apt-get update
sudo apt-get install wget unzip

 download it for linux os
wget https://releases.hashicorp.com/terraform/0.12.7/terraform_0.12.7_linux_amd64.zip

ubuntu@ip-172-31-1-34:~$ unzip terraform_0.12.7_linux_amd64.zip
Archive:  terraform_0.12.7_linux_amd64.zip
  inflating: terraform
  
sudo mv terraform /usr/local/bin/
ubuntu@ip-172-31-1-34:~$ terraform --version
Terraform v0.12.7

Step4--->
ubuntu@ip-172-31-1-34:~$ vi main.tf

# Download the latest nginx-image
resource "docker_image" "image_id" {
         name = "nginx : latest"
} 

 
Step5-----> Initialize in Backend
ubuntu@ip-172-31-1-34:~$ terraform init

ubuntu@ip-172-31-1-34:~$ terraform validate
Success! The configuration is valid.

ubuntu@ip-172-31-1-34:~$ terraform plan -out=tf_image_plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # docker_image.image_id will be created
  + resource "docker_image" "image_id" {
      + id     = (known after apply)
      + latest = (known after apply)
      + name   = "nginx : latest"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

This plan was saved to: tf_image_plan

To perform exactly these actions, run the following command to apply:
    terraform apply "tf_image_plan"

Step7---------> ubuntu@ip-172-31-1-34:~$ terraform apply myplan
docker_image.image_id: Creating...
docker_image.image_id: Creation complete after 7s [id=sha256:231d40e811cd970168fb0c4770f2161aa30b9ba6fe8e68527504df69643aa145nginx:latest]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the `terraform show` command.

State path: terraform.tfstate

Step8--------> 

ubuntu@ip-172-31-1-34:~$ docker images
O/P
REPOSITORY                           TAG                 IMAGE ID            CREATED             SIZE
nginx                                latest              231d40e811cd        2 weeks ago         126MB



